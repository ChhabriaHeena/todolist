{"version":3,"sources":["Context/TodoContext.js","Context/action.types.js","Context/reducer.js","Components/TodoForm.js","Components/Todos.js","App.js","index.js"],"names":["TodoContext","createContext","ADD_TODO","REMOVE_TODO","state","action","type","payload","filter","todo","id","TodoForm","useState","todoString","setTodoString","dispatch","useContext","Form","onSubmit","e","preventDefault","alert","v4","FormGroup","InputGroup","Input","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","Todos","todos","ListGroup","className","map","ListGroupItem","onClick","App","useReducer","todoReducer","Provider","Container","fluid","ReactDOM","render","document","getElementById"],"mappings":"6KAKaA,G,YAAcC,2B,QCLdC,EAAW,WAEXC,EAAc,cCAZ,WAACC,EAAOC,GACnB,OAAQA,EAAOC,MACX,KAAKJ,EACD,MAAM,GAAN,mBAAWE,GAAX,CAAkBC,EAAOE,UAC7B,KAAKJ,EACD,OAAOC,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAOE,WAEnD,QACI,OAAOH,I,+DC6DJO,EAzDE,WAGb,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACOC,EAAYC,qBAAWhB,GAAvBe,SAyBP,OACI,cAACE,EAAA,EAAD,CAAMC,SAtBW,SAAAC,GAEjB,GADAA,EAAEC,iBACgB,KAAfP,EAEC,OAAOQ,MAAM,uBAEjB,IAAMZ,EAAO,CACTI,aACAH,GAAIY,eAGRP,EAAS,CACLT,KAAMJ,EACNK,QAASE,IAGbK,EAAc,KAMd,SACI,cAACS,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CACAnB,KAAK,OACLoB,KAAK,OACLhB,GAAG,OACHiB,YAAY,iBACZC,MAAOf,EACPgB,SAAU,SAAAV,GAAC,OAAIL,EAAcK,EAAEW,OAAOF,UAGtC,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACI,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAd,2B,wBCxBLC,EA3BD,WAEV,MAA0BnB,qBAAWhB,GAA9BoC,EAAP,EAAOA,MAAOrB,EAAd,EAAcA,SAEd,OACI,cAACsB,EAAA,EAAD,CAAWC,UAAU,kBAArB,SAEQF,EAAMG,KAAI,SAAA9B,GAAI,OACV,eAAC+B,EAAA,EAAD,WACK/B,EAAKI,WACN,sBAAMyB,UAAU,cAChBG,QAAS,WACL1B,EAAS,CACLT,KAAKH,EACLI,QAAQE,EAAKC,MAJrB,SAQI,cAAC,IAAD,QAVYD,EAAKC,UCW9BgC,EAdH,WACR,MAA0BC,qBAAWC,EAAY,IAAjD,mBAAOR,EAAP,KAAcrB,EAAd,KAEA,OACI,cAACf,EAAY6C,SAAb,CAAsBjB,MAAO,CAACQ,QAAOrB,YAArC,SACA,eAAC+B,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,2DACA,cAAC,EAAD,IACA,cAAC,EAAD,UCfZC,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3b0c4f8f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n\r\n\r\n\r\nexport const TodoContext = createContext();","export const ADD_TODO = \"ADD_TODO\";\r\n\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";","import { ADD_TODO, REMOVE_TODO } from './action.types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return [...state, action.payload]\r\n        case REMOVE_TODO:\r\n            return state.filter(todo => todo.id !== action.payload)\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}; ","import React, { useState, useContext } from 'react';\r\nimport {\r\n    FormGroup,\r\n    Input,\r\n    Button,\r\n    Form,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from \"reactstrap\";\r\n\r\nimport { v4 } from \"uuid\";\r\n\r\nimport { TodoContext } from \"../Context/TodoContext\";\r\nimport { ADD_TODO } from '../Context/action.types';\r\nconst TodoForm = () =>\r\n{\r\n\r\n    const [todoString, setTodoString] = useState(\"\");\r\n    const {dispatch} = useContext(TodoContext);\r\n\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(todoString === \"\")\r\n        {\r\n            return alert(\"please enter a todo\");\r\n        }\r\n        const todo = {\r\n            todoString,\r\n            id: v4()\r\n        };\r\n\r\n        dispatch({\r\n            type: ADD_TODO,\r\n            payload: todo\r\n        });\r\n\r\n        setTodoString(\"\");\r\n    };\r\n\r\n\r\n\r\n    return(\r\n        <Form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <InputGroup>\r\n                <Input\r\n                type=\"text\"\r\n                name=\"todo\"\r\n                id=\"todo\"\r\n                placeholder=\"Your next Todo\"\r\n                value={todoString}\r\n                onChange={e => setTodoString(e.target.value)}\r\n                />\r\n\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                    <Button color=\"warning\"\r\n                    //TODO: onclick\r\n                    >\r\n                        Add\r\n\r\n                    </Button>\r\n                </InputGroupAddon>\r\n                </InputGroup>\r\n            </FormGroup>\r\n        </Form>\r\n    );\r\n\r\n};\r\n\r\nexport default TodoForm;","import React, { useContext } from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { FaCheckDouble } from 'react-icons/fa';\r\nimport { TodoContext } from '../Context/TodoContext';\r\nimport { REMOVE_TODO } from '../Context/action.types';\r\n\r\nconst Todos = () => {\r\n    \r\n    const {todos, dispatch} = useContext(TodoContext);\r\n\r\n    return (\r\n        <ListGroup className=\"mt-5 mb-2 items\">\r\n            {\r\n                todos.map(todo => (\r\n                    <ListGroupItem key={todo.id}>\r\n                        {todo.todoString}\r\n                        <span className=\"float-right\"\r\n                        onClick={()=> {\r\n                            dispatch({\r\n                                type:REMOVE_TODO,\r\n                                payload:todo.id\r\n                            })\r\n                        }}>\r\n                            \r\n                            <FaCheckDouble/></span>\r\n                        </ListGroupItem>\r\n                ))\r\n            }\r\n            </ListGroup>\r\n\r\n    );\r\n\r\n};\r\nexport default Todos;","import React, {useReducer} from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport {TodoContext} from \"./Context/TodoContext\";\r\nimport todoReducer from \"./Context/reducer\";\r\nimport TodoForm from './Components/TodoForm';\r\nimport Todos from './Components/Todos';\r\n\r\n\r\nconst App = () => {\r\n    const [todos, dispatch] = useReducer(todoReducer,[])\r\n\r\n    return (\r\n        <TodoContext.Provider value={{todos, dispatch}}>\r\n        <Container fluid>\r\n            <h1>Todo App with Context API</h1>\r\n            <Todos/>\r\n            <TodoForm/>\r\n        </Container>\r\n        </TodoContext.Provider>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDOM.render( <App/> , document.getElementById(\"root\"));"],"sourceRoot":""}